version: '3.4'

services:
  postgres:
    image: postgres:12.12-alpine
    container_name: postgres
    restart: always
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  rabbitmq:
    image: rabbitmq:3.11-alpine
    container_name: rabbitmq
    restart: always
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    env_file:
      - ./.env
    ports:
      - 15672:15672
      - 5672:5672

  celeryworker:
    container_name: celeryworker
    build:
      context: crm/
      dockerfile: Dockerfile
    command: celery -A crm worker -l info --pool=prefork 
    volumes:
      - ./crm:/home/app/web
    env_file:
      - ./.env
    depends_on:
      - rabbitmq
  
  celeryscheduler:
    container_name: celeryscheduler
    build:
      context: crm/
      dockerfile: Dockerfile
    command: celery -A crm beat -l info
    volumes:
      - ./crm:/home/app/web
    env_file:
      - ./.env
    depends_on:
      - rabbitmq

  flower:
    container_name: flower
    image: mher/flower:0.9.7
    command: celery flower
    ports:
      - 5555:5555
    env_file:
      - ./.env
    depends_on:
      - rabbitmq

  web:
    container_name: web
    build:
      context: crm/
      dockerfile: Dockerfile
    restart: always
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./crm:/home/app/web
    env_file:
      - ./.env
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - rabbitmq
  

  bot:
    container_name: bot
    build:
      context: crm/
      dockerfile: Dockerfile
    restart: always
    command: python manage.py bot
    volumes:
      - ./crm:/home/app/web
    env_file:
      - ./.env
