version: '3.4'

services:
  # db:
  #   image: postgres:12.12-alpine
  #   restart: always
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  #   environment:
  #     - ./.env.prod

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: always
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    env_file:
      - ./.env.prod
    ports:
      - 15672:15672
      - 5672:5672

  celeryworker:
    container_name: celeryworker
    build:
      context: crm/
      dockerfile: Dockerfile
    command: celery -A crm.celery.app worker --pool=prefork -l info
    volumes:
      - ./crm:/app/web
    env_file:
      - ./.env.dev
    depends_on:
      - rabbitmq
  
  celeryscheduler:
    container_name: celeryscheduler
    build:
      context: crm/
      dockerfile: Dockerfile
    command: celery -A crm beat -l info
    volumes:
      - ./crm:/app/web
    env_file:
      - ./.env.prod
    depends_on:
      - rabbitmq

  web:
    container_name: web
    build:
      context: crm/
      dockerfile: Dockerfile
    restart: always
    command: gunicorn crm.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./crm/staticfiles:/app/web/staticfiles
      - ./crm/mediafiles:/home/app/web/mediafiles
    env_file:
      - ./.env.prod
    expose:
      - 8000
    # depends_on:
    #   - db
  
  bot:
    container_name: bot
    build:
      context: bot/
      dockerfile: Dockerfile
    restart: always
    command: python main.py
    volumes:
      - ./bot:/app/bot
    env_file:
      - ./.env.prod

  nginx:
    container_name: nginx
    build:
      context:  nginx/
      dockerfile: Dockerfile
    restart: always
    ports:
      - 80:80
    volumes:
      - ./crm/staticfiles:/app/web/staticfiles
      - ./crm/mediafiles:/home/app/web/mediafiles
    depends_on:
      - web
